name: Update coverage

on:
  workflow_run:
    workflows: ["Pull Request CI"]
    types:
      - completed

jobs:
  coverage:
    runs-on: ubuntu-latest
    if: >
      ${{ github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' }}    
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr"
            })[0];
            var download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
      - run: unzip pr.zip

      - name: Generate Jacoco Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.11.0
        with:
          jacoco-csv-file: testreport/target/site/jacoco-aggregate/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"  

      #      - name: Update coverage badge
      #        run: ./build/badge-update.sh

      - name: 'Comment on PR with code coverage'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var fs = require('fs');
            var issue_number = Number(fs.readFileSync('./pr/NR'));
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: 'Code coverage after this PR: ' + ${{ steps.jacoco.outputs.coverage }}
            });
