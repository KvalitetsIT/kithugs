openapi: 3.1.0
info:
  title: Kithugs
  description: API description for KITHUGS.
  version: "1.0.0"
  contact:
    email: development@kvalitetitsit.dk
tags:
  - name: KITHUGS
    description: KITHUGS related API's

servers:
  - url: '{protocol}://{environment}:{port}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      environment:
        enum:
          - localhost # Docker-compose setup
        default: localhost # Development
      port:
        enum:
          - 8080
        default: 8080
paths:
  /v1/hello:
    get:
      tags:
        - KITHUGS
      parameters:
        - name: name
          in: query
          required: false
          description: Name. If name is "NOT_VALID" an validation error occurs.
          schema:
            type: string
            maxLength: 10
          example: 'John Doe'
      summary: Get name.
      description: Get all instances of the name in the db. If no name is specified, get everything that's in the db.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helloResponseList'
        '400':
          $ref: '#/components/responses/400'
    post:
      tags:
        - KITHUGS
      requestBody:
        description: Hello request body.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/helloRequest'
      summary: API to test body validation.
      description: Posting a name longer than 10 characters trigger an validation error.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helloResponse'
        '400':
          $ref: '#/components/responses/400'

components:
  responses:
    '400':
      description: "Bad Request. This could be because: * One of the required parameters/properties are missing or is empty <br> * Length of input is exceeding maximum length <br> (See a possible detailed error message in the in the response.)"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/detailedError'
    '401':
      description: "Unauthorized. This could be because: <br> * The calling system has not been properly authenticated."
    '403':
      description: "Forbidden. This could be because: <br> * The requested information does not belong the organisation of the user <br> * The calling user does not have the required roles"

  schemas:
    helloRequest:
      type: object
      required:
        - name
      properties:
        name:
          description: Your name
          type: string
          example: "John Doe"
          maxLength: 10
    helloResponse:
      type: object
      required:
        - name
        - now
      properties:
        name:
          description: Your name
          type: string
          example: "John Doe"
        now:
          description: Time request was received
          type: string
          format: date-time
        i_can_be_null:
          type: string
          nullable: true

    helloResponseList:
      type: array
      description: List of hello responses
      items:
        $ref: '#/components/schemas/helloResponse'

    detailedError:
      allOf:
        - $ref: '#/components/schemas/basicError'
        - type: object
          required:
            - detailed_error
            - detailed_error_code
          properties:
            detailed_error:
              description: Detailed error text. This could be a text describing an validation error.
              type: string
            detailed_error_code:
              description: >-
                Detailed error code. This could be a code describing an validation error.
                * 10: Input validation error
                * 20: Other error.
              type: string
              enum:
                - 10
                - 20

    basicError:
      type: object
      required:
        - timestamp
        - status
        - error
        - path
      properties:
        error:
          description: Error message.
          type: string
        path:
          description: Path
          type: string
        status:
          description: HTTP status code
          type: integer
        timestamp:
          description: Time of error
          type: string
          format: date-time
