<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>kithugs</artifactId>
		<groupId>dk.kvalitetsit.kithugs</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>documentation</artifactId>

	<dependencies>
		<!-- Dependencies for server interface -->
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>logging-interceptor</artifactId>
			<version>4.11.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.gsonfire</groupId>
			<artifactId>gson-fire</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>exec-maven-plugin</artifactId>
				<groupId>org.codehaus.mojo</groupId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>Get old doc versions</id>
						<phase>compile</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker/getOldDoc.sh</executable>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<images>
						<image>
							<name>kvalitetsit/kithugs-documentation</name>
							<build>
								<tags>
									<tag>dev</tag>
									<tag>latest</tag>
									<tag>${git.commit.id}</tag>
								</tags>
								<dockerFileDir>${project.basedir}/docker</dockerFileDir>
								<assembly>
									<inline>
										<files>
											<file>
												<source>${project.basedir}/src/main/resources/helloservice.yaml</source>
												<destName>${git.commit.id.describe}.yaml</destName>
											</file>
											<file>
												<source>${project.build.outputDirectory}/git.properties</source>
												<destName>runningVersion.json</destName>
											</file>
										</files>
										<fileSets>
											<fileSet>
												<directory>target/old</directory>
												<outputDirectory>/</outputDirectory>
											</fileSet>
										</fileSets>
									</inline>
									<descriptorRef>artifact</descriptorRef>
									<targetDir>/app</targetDir>
								</assembly>
							</build>
						</image>
					</images>
					<verbose>true</verbose>
				</configuration>
				<executions>
					<execution>
						<id>build-image</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>7.0.0</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/helloservice.yaml</inputSpec>
							<generatorName>java</generatorName>
							<configOptions>
								<sourceFolder>src/test/java</sourceFolder>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
							<output>${project.build.directory}/generated-test-sources/openapi/test</output>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<addTestCompileSourceRoot>true</addTestCompileSourceRoot>
							<addCompileSourceRoot>false</addCompileSourceRoot>
						</configuration>
					</execution>
					<execution>
						<id>server</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/helloservice.yaml</inputSpec>
							<generatorName>spring</generatorName>
							<configOptions>
								<sourceFolder>src/main/java</sourceFolder>
								<dateLibrary>java8</dateLibrary>
								<interfaceOnly>true</interfaceOnly>
								<performBeanValidation>true</performBeanValidation>
								<library>spring-cloud</library>
								<useSpringBoot3>true</useSpringBoot3>
							</configOptions>
							<output>${project.build.directory}/generated-sources/openapi/main</output>
							<generateApiDocumentation>false</generateApiDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
				<configuration>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
					<includeOnlyProperties>
						<includeOnlyProperty>git.commit.id.describe</includeOnlyProperty>
					</includeOnlyProperties>
					<commitIdGenerationMode>full</commitIdGenerationMode>
					<gitDescribe>
						<tags>true</tags>
					</gitDescribe>
					<format>json</format>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>